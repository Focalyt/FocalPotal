<% include ../partials/header %>
  <div class="content-header row d-xl-block d-lg-block d-md-none d-sm-none d-none">
    <div class="content-header-left col-md-9 col-12 mb-2">
      <div class="row breadcrumbs-top">
        <div class="col-12">
          <h3 class="content-header-title float-left mb-0">Add Post</h3>
          <div class="breadcrumb-wrapper col-12">
            <ol class="breadcrumb">
              <li class="breadcrumb-item"><a href="/admin">Home</a></li>
              <li class="breadcrumb-item active">Add Post</li>
            </ol>
          </div>
        </div>
      </div>
    </div>
  </div>
  <div id="add-model">
    <div class="content-body">
      <% include ../partials/flash %>
        <form id="post-form" enctype="multipart/form-data">
          <!-- Input Group for Post -->
          <div class="input-group">
            <!-- Text Input -->
            <textarea name="content" id="post-content" class="form-control" rows="3" placeholder="What's on your mind?"
              required></textarea>
            <!-- Media Button -->
            <div class="ml-3">
              <div>
                <label for="file-upload" class="media-btn">
                  <img src="https://static.xx.fbcdn.net/rsrc.php/v4/y7/r/Ivw7nhRtXyo.png" alt="Media Icon">
                  <!-- Facebook Media Icon -->
                  Photo/Video
                </label>
                <input type="file" id="file-upload" name="file" class="d-none" multiple accept="image/*,video/*">
              </div>
              <div>
                <button onclick="setTabPills()" class="border-none" style="border:none; background:transparent" type="button"
                  data-bs-toggle="modal" data-bs-target="#staticBackdrop">
                  <img src="	https://static.xx.fbcdn.net/rsrc.php/v4/yq/r/b37mHA1PjfK.png" alt="Media Icon">
                  <!-- Facebook Media Icon -->
                  Tag
                </button>
              </div>
              <!-- Modal -->
              <div class="modal fade " id="staticBackdrop" data-bs-backdrop="static" data-bs-keyboard="false"
                tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true" style="overflow: hidden;">
                <div class="modal-dialog new-model-dialog">
                  <div class="modal-content">
                    <div class="modal-header">
                      <h5 class="modal-title text-white" id="staticBackdropLabel">Tag People</h5>
                      <button onclick="closePopup()" type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"
                        style="background:transparent; border:none">
                        <i class="fa-solid fa-x" style="color: #ffffff;"></i>
                      </button>
                    </div>
                    <div class="modal-body">
                      <div class="tag_people">
                        <div class="search">
                          <div class="tagging-container">
                            <div class="tag-input-container">
                              <div class="tags" id="tagscandidate">
                                <!-- Tags will dynamically appear here -->
                               
                              </div>
                              <!-- <input type="text" class="tag-input" placeholder="Taged"> -->
                              <!-- <textarea name="content" id="post-content" class="form-control" rows="1" placeholder="What's on your mind?"
                              required>
                              <span>test</span>
                             </textarea> -->
                             
                            </div>
                            <span class="done" data-bs-dismiss="modal" id="donebutton">Done</span>
                          </div>
                          <div class="nav--pills">
                            <ul class="nav nav-tabs" id="myTab" role="tablist">
                              <li class="nav-item" role="presentation" onclick="selctedTagFor('admin')">
                                <a class="nav-link" id="admin-tab" data-bs-toggle="tab" href="#admin" role="tab"
                                  aria-controls="admin" aria-selected="true">Admin</a>
                              </li>
                              <li class="nav-item" role="presentation" onclick="selctedTagFor('company')">
                                <a class="nav-link" id="company-tab" data-bs-toggle="tab" href="#company" role="tab"
                                  aria-controls="company" aria-selected="false">Company</a>
                              </li>
                              <li class="nav-item" role="presentation" onclick="selctedTagFor('college')">
                                <a class="nav-link" id="institute-tab" data-bs-toggle="tab" href="#institute" role="tab"
                                  aria-controls="institute" aria-selected="false">Institute</a>
                              </li>
                              <li class="nav-item" role="presentation" >
                                <a class="nav-link active" id="student-tab" data-bs-toggle="tab" href="#student" role="tab"
                                  aria-controls="student" aria-selected="false">Student</a>
                              </li>
                            </ul>

                            <!-- Tab Content -->
                            <div class="tab-content" id="myTabContent">
                              <div class="tab-pane fade" id="admin" role="tabpanel"
                                aria-labelledby="admin-tab">
                                <!-- Admin content goes here -->
                                <!-- <div class="inner_search">
                                  <i class="fa-solid fa-magnifying-glass search-icon" onclick="searchbynameorphone()"></i>
                                  <input type="text" placeholder="Search" id="searchbyAdmin" name="searchbyAdmin">
                                </div> -->
                                <div class='employee-attendance-table'>
                                  <table class="employee-table">
                                    <thead>
                                      <tr class='header-tr'>
                                        <th>Select</th>
                                        <th>Name</th>
                                        <!-- <th>Mobile</th> -->
                                      </tr>
                                    </thead>
                                    <tbody id="adminTableBody">
                                      <!-- <tr>
                                        <td>
                                          <input type="checkbox">
                                        </td>
                                        <td class="employee-info">
                                          <img src="/public_assets/images/newpage/logo-ha.svg" alt=""
                                            class="employee-avatar" />
                                          <div class='employee-basic-info'>
                                            <span class="employee-name tooltipp" title="Akash">Akash</span>

                                          </div>
                                        </td>
                                        <td>12345678900</td>

                                      </tr> -->
                                    </tbody>
                                  </table>
                                </div>
                              </div>
                              <div class="tab-pane fade" id="company" role="tabpanel" aria-labelledby="company-tab">
                                <!-- Company content goes here -->
                                <div class="inner_search">
                                  <i class="fa-solid fa-magnifying-glass search-icon" onclick="searchbynameorphone()"></i>
                                  <input type="text" placeholder="Search" id="searchbyCompany" name="searchbyCompany" oninput="debouncedSearch()">
                                </div>
                                <div class='employee-attendance-table'>
                                  <table class="employee-table">
                                    <thead>
                                      <tr class='header-tr'>
                                        <th>Select</th>
                                        <th>Company Name</th>
                                        <!-- <th>Mobile</th> -->
                                      </tr>
                                    </thead>
                                    <tbody id="companyTableBody">
                                      <tr>
                                        <td>
                                          <input type="checkbox">
                                        </td>
                                        <td class="employee-info">
                                          <img src="/public_assets/images/newpage/logo-ha.svg" alt=""
                                            class="employee-avatar" />
                                          <div class='employee-basic-info'>
                                            <span class="employee-name tooltipp"
                                              title="Focal Skill Development Pvt Ltd">Focal Skill Development Pvt
                                              Ltd</span>

                                          </div>
                                        </td>
                                        <td>12345678900</td>

                                      </tr>
                                    </tbody>
                                  </table>
                                </div>
                              </div>
                              <div class="tab-pane fade" id="institute" role="tabpanel" aria-labelledby="institute-tab">
                                <!-- Institute content goes here -->
                                <div class="inner_search">
                                  <i class="fa-solid fa-magnifying-glass search-icon" onclick="searchbynameorphone()"></i>
                                  <input type="text" placeholder="Search" id="searchbyInstitute" name="searchbyInstitute" oninput="debouncedSearch()">
                                </div>
                                <div class='employee-attendance-table'>
                                  <table class="employee-table">
                                    <thead>
                                      <tr class='header-tr'>
                                        <th>Select</th>
                                        <th>Institute Name</th>
                                        <!-- <th>Mobile</th> -->
                                      </tr>
                                    </thead>
                                    <tbody id="collegeTableBody">
                                      <tr>
                                        <td>
                                          <input type="checkbox">
                                        </td>
                                        <td class="employee-info">
                                          <img src="/public_assets/images/newpage/logo-ha.svg" alt=""
                                            class="employee-avatar" />
                                          <div class='employee-basic-info'>
                                            <span class="employee-name tooltipp" title="Akash">Akash</span>

                                          </div>
                                        </td>
                                        <td>12345678900</td>

                                      </tr>
                                    </tbody>
                                  </table>
                                </div>
                              </div>
                              <div class="tab-pane fade show active" id="student" role="tabpanel" aria-labelledby="student-tab">
                                <!-- Student content goes here -->
                                <div class="inner_search">
                                  <i class="fa-solid fa-magnifying-glass search-icon"></i>
                                  <input type="text" placeholder="Search" id="searchbyCanditate" name="searchbyCanditate" oninput="debouncedSearch()">
                                </div>
                                <div class='employee-attendance-table'>
                                  <table class="employee-table">
                                    <thead>
                                      <tr class='header-tr'>
                                        <th>Select</th>
                                        <th>Student Name</th>
                                        <th>Mobile</th>
                                      </tr>
                                    </thead>


                                    <tbody id="candidateTableBody">
                                      <!-- <tr>
                                        <td>
                                          <input type="checkbox">
                                        </td>
                                        <td class="employee-info">
                                          <img src="/public_assets/images/newpage/logo-ha.svg" alt=""
                                            class="employee-avatar" />
                                          <div class='employee-basic-info'>
                                            <span class="employee-name tooltipp" title="Akash">Akash</span>

                                          </div>
                                        </td>
                                        <td>12345678900</td>

                                      </tr> -->


                                    </tbody>
                                  </table>
                                </div>
                              </div>
                            </div>
                          </div>
                        </div>
                      </div>
                    </div>

                  </div>
                </div>
              </div>


            </div>

          </div>
          <!-- Submit Button -->
          <button type="submit" class="btn btn-primary mt-3">Post</button>
        </form>


    </div>
    
  </div>
  

  <style>
    #add-model .hideScroll .model-open .model {
      overflow: hidden;
    }

    .inner_search {
      display: flex;
      align-items: center;
      justify-content: center;
    }

    .search input {
      border: 1px solid #ccc;
      border-radius: 15px;
      font-size: 16px;
      padding: 3px 10px;
      width: 60%;

    }

    .search-icon {
      color: #FC2B5A;
      border: 1px solid #ccc;
      padding: 6px 10px;
      display: inline-block;
      border-top-left-radius: 15px;
      border-bottom-left-radius: 15px;
    }

    .inner_search input {
      border: 1px solid #ccc;
      border-left: none;
      border-radius: 0px;
      border-top-right-radius: 15px;
      border-bottom-right-radius: 15px;
      font-size: 16px;
      padding: 3px 10px;
      width: 30%;
    }

    .tagging-container {
      /*display: flex;*/
      align-items: center;
      justify-content: center;
      margin: 0 auto;
    }

    .tag-input-container {
      margin-right: 10px;
    }

    .tags {
      display: flex;
      flex-wrap: wrap;
      gap: 5px;
    }

    .tag {
      display: inline-flex;
      align-items: center;
      background-color: #f0f0f0;
      color: #333;
      padding: 5px 10px;
      border-radius: 15px;
      font-size: 14px;
    }

    .tag .remove-tag {
      margin-left: 5px;
      cursor: pointer;
      color: #FC2B5A;
      font-weight: bold;
    }

    .tag-input-container input {
      /* border: ; */
      outline: none;
      font-size: 14px;
      padding: 5px 10px;
      min-width: 100%;
    }

    .done {
      color: #FC2B5A;
      cursor: pointer;
      font-size: 14px;
    }

    .nav--pills {
      display: flex;
      gap: 5px;
      align-items: center;
      justify-content: space-evenly;
      padding-block: 15px;
      flex-direction: column;
      margin-block: 20px;
      background: #fff;
    }

    .nav--pills>div {
      /* background: #FC2B5A; */
      width: 100%;
    }

    .nav--pills .nav.nav-tabs .nav-item .nav-link {
      position: relative;
      border-top: 1px solid transparent;
      border-left: 1px solid transparent;
      border-right: 1px solid transparent;
      border-bottom: none;
      transition: all 0.3s ease;
      border-top-left-radius: 10px;
      border-top-right-radius: 10px;
      font-size: 20px;
    }

    .nav--pills .nav.nav-tabs .nav-item .nav-link.active {
      position: relative;
      border-top: 1px solid transparent;
      border-left: 1px solid transparent;
      border-right: 1px solid transparent;
      border-image: linear-gradient(30deg, #FC2B5A, rgba(115, 103, 240, 0.5)) 1 !important;
      border-bottom: none;
      background: none;
      transition: all 0.3s ease;
      border-top-left-radius: 10px;
      border-top-right-radius: 10px;
      font-size: 20px;
    }

    .nav--pills .nav.nav-tabs .nav-item .nav-link.active:after {
      content: "";
      /* Remove bottom gradient */
      display: none;
    }

    .tab-pane {
      transition: opacity 0.3s ease-in-out, transform 0.3s ease-in-out;
    }

    .tab-pane:not(.active) {
      opacity: 0;
      transform: scale(0.95);
      /* Slight zoom-out effect when hidden */
    }

    .tab-pane.active {
      opacity: 1;
      transform: scale(1);
      /* Reset zoom to normal for the active tab */
    }

    /* table css  */
    .employee-list-container {
      padding: 0px;
      width: 80%px;
      background-color: var(--textWhite);
      /* #ffffff;*/
      border-radius: 8px;
      color: #FF1567;
    }

    .employee-basic-info {
      display: flex;
      align-items: center;
      gap: 5px;
      /* flex-direction: column; */
    }

    .employee-list-title {
      font-size: 25px;
      font-weight: 600;
      margin-bottom: 10px;
      text-align: center;
      padding: 10px;
    }


    .employee-attendance-table {
      width: 100%;
      /* overflow-x: auto; */
      margin-top: 25px;
      max-height: 50vh;
    }

    .employee-table {
      width: 100%;
      border-collapse: collapse;
      table-layout: auto;
      /* table-layout: fixed; */
      table-layout: auto;
    }

    .employee-table th {
      text-align: center;
    }

    .employee-table th,
    .employee-table td {
      padding: 12px;
      border-bottom: 1px solid #ddd;

    }

    .employee-table tr {
      display: table;
      width: 100%;
      table-layout: fixed;
    }

    .employee-table thead {
      position: sticky;
      top: 0;
      z-index: 1;
    }

    .employee-table td {
      color: black;
      font-size: 15px;
      text-align: left;

    }

    .employee-table tbody {
      display: block;
      max-height: 50vh;
      overflow: auto;
    }

    /* .employee-table tbody tr{
  min-height: 25px;
}
.employee-table tbody td {
  width: auto;
  max-width: 100px;
  min-width: 20px;
} */
    .employee-info {
      display: flex;
      align-items: center;
    }

    .employee-avatar {
      width: 40px;
      height: 40px;
      border-radius: 50%;
      margin-right: 10px;
    }

    .employee-name {
      font-weight: 500;
      color: #333;
    }

    .tooltipp {
      max-width: 200px;
      overflow: hidden;
      white-space: nowrap;
      text-overflow: ellipsis;
      max-height: 1.2em;
      transition: max-height 0.8s ease, white-space 0.8s ease;
      cursor: pointer;
    }

    .employee .cateForm {
      display: flex;
      align-items: center;

      justify-content: space-around;
      text-align: center;
      width: 98%;
      font-size: 13px;
    }

    .cateForm1 {
      display: block;
      text-align: left;
      width: 100%;
    }

    .cateForm label {
      display: flex;
      align-items: flex-start;
      gap: 2px;
      padding: 5px 10px;
      /* width: 50%; */
      flex-direction: column;
    }

    .Description {
      height: 150px;
    }

    .cateForm input {
      width: 97%;
      height: 30px;
    }

    .cateForm textarea {
      width: 98%;
    }

    .cateBtn {
      display: flex;
      justify-content: center;
      align-items: center;
      text-align: center;
      gap: 20px;
      padding-block: 20px;

    }

    .cateBtn button {
      padding: 7px 20px;
      border-radius: 15px;
      font-size: 15px;
      font-weight: 500;
      cursor: pointer;
    }

    .employee-table thead tr th {
      font-size: 12px;
      font-weight: 400;
      padding: 7px 5px;
      text-align: start;
    }

    .employee-attendance-table>.employee-table>tbody {
      max-height: 50vh;
    }

    .employee-attendance-table::-webkit-scrollbar {
      width: 8px;
    }

    .employee-attendance-table::-webkit-scrollbar-track {
      background: #f0f0f0;
      border-radius: 10px;
    }

    .employee-attendance-table::-webkit-scrollbar-thumb {
      background-color: #FC2B5A;
      border-radius: 10px;
      border: 2px solid #f0f0f0;
    }

    .employee-attendance-table::-webkit-scrollbar-thumb:hover {
      background-color: #d61a4d;
    }


    .new-model-dialog{
      max-width: 850px;
    }
    .header-tr tr:nth-child(1){
      width: 135px;
    }
    tbody tr td:nth-child(1) input[type="checkbox"] {
      /* width: 135px; */
      width: 50px;
  }

  @media (max-width: 768px) {
    .employee-table tr{
      table-layout: auto;
    }
    .employee-attendance-table {
        overflow-x: scroll;
    }

    .employee-table {
        min-width: 100%;
    }


    .employee-info {
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
    }

    .employee-table td:first-child, .employee-table th:first-child {
        min-width: 70px; 
    }

    .employee-table td input[type="checkbox"] {
        width: 20px; 
        height: 20px; 
    }

   
    .employee-table td {
        min-width: 120px; 
    }
}
  </style>
  <script src="https://cdn.tiny.cloud/1/no-api-key/tinymce/5/tinymce.min.js" referrerpolicy="origin"></script>

  <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
  <% let candidates = []; %> <!-- Candidates Array -->
<% let page = 1; %>       <!-- Initial Page Number -->

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

<script>
  // Initializing Variables
  var candidateslist  = [];
  var page = 1;
  var isLoading = false; // Prevent multiple API calls
  var hasMoreData = true; // जब तक डेटा मौजूद है, लोड होगा

  // Function to Fetch Candidates
  function fetchCandidates() {
    if (isLoading || !hasMoreData) return; // अगर पहले से API कॉल हो रही है या डेटा नहीं है तो रोकें
    isLoading = true;

    $.ajax({
      url: "/admin/post/candidateslist?page=" + page,
      type: "GET",
      success: function (response) {
        console.log('candidate data', response)
        if (response && response.length > 0) {
          newCandidateslist = candidateslist.concat(response); // Add new data
          console.log(newCandidateslist)
          appendCandidatesToDOM(newCandidateslist)
           // Append New Data to DOM
          page++; // ✅ Page तब ही बढ़ेगा जब डेटा आएगा
        } else {
          hasMoreData = false; // अगर कोई डेटा नहीं मिला तो आगे API कॉल मत करो
        }
        isLoading = false;
      },
      error: function (xhr, status, error) {
        console.error("Error fetching candidates:", error);
        isLoading = false;
      },
    });
  }

 // ✅ **Scroll Event Handler: जब यूज़र 50% Scroll कर ले तब API कॉल हो**
 $(document).ready(function () {
    $("#candidateTableBody").on("scroll", function () {
        let scrollTop = $(this).scrollTop(); // कितने px स्क्रॉल हुआ
        let scrollHeight = $(this)[0].scrollHeight; // पूरे स्क्रॉल की हाइट
        let clientHeight = $(this).innerHeight(); // अंदर की हाइट

        let scrolledPercentage = (scrollTop + clientHeight) / scrollHeight * 100;
        console.log("Scrolled:", scrolledPercentage + "%"); // Debugging

        // जब scroll 50% के बाद हो जाए, तो API call करो
        if (scrolledPercentage > 80 && !isLoading && hasMoreData) {
            console.log("Fetching More Data...");
            fetchCandidates();
        }
    });
});


  // Function to Render Candidates in the Table
  // ✅ **DOM में नया डेटा Map करने का Function (Table में Add करें)**
function appendCandidatesToDOM(candidates) {
  console.log("adding data in consoel", candidates)
    candidates.forEach(candidate => {
        $("#candidateTableBody").append(`
            <tr>
              <td><input value="${candidate._id}" type="checkbox"></td>
                <td>${candidate.name}</td>
                <td>${candidate.mobile}</td>
            </tr>
        `);
    });
}

let selectedTags = []; // Selected candidates store होंगे

// ✅ Function: Checkbox Click होने पर Data Store/Remove होगा
$(document).on("change", "#candidateTableBody input[type=checkbox]", function () {
    let candidateId = $(this).val();
    let candidateName = $(this).closest("tr").find("td:nth-child(2)").text().trim();
    let candidateMobile = $(this).closest("tr").find("td:nth-child(3)").text().trim();
    let userType = "candidate"; // Default type candidate

    if ($(this).prop("checked")) {
        // ✅ अगर checkbox select किया गया तो add करो
        selectedTags.push({
            userId: candidateId,
            name: candidateName,
            userType: userType
        });

        updateTagList();
    } else {
        // ✅ अगर uncheck किया गया तो remove करो
        selectedTags = selectedTags.filter(c => c.userId !== candidateId);
        updateTagList();
    }

    console.log("Selected Candidates:", selectedTags);
});

function updateTagList() {
    $("#tagscandidate").empty(); // पहले सभी Tags को Clear करें
    selectedTags.forEach((selectedTag, index) => {
        $("#tagscandidate").append(`
            <div class="btn btn-primary tag-item" style="padding: 0.3rem 1rem;" data-id="${selectedTag.userId}">
                ${selectedTag.name} 
                <span class="badge bg-secondary remove-tag" data-index="${index}">
                    <i class="fa-solid fa-x" style="color: #000000;" aria-hidden="true"></i>
                </span>
            </div>
        `);
    });
}

// function appendTagsToDOM(selectedTags) {
//   console.log("adding data in consoel", selectedTags)
  
// }


  fetchCandidates()
</script>



  <script src="https://ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js"></script>
  <!-- <script src="https://cdn.ckeditor.com/ckeditor5/37.0.0/classic/ckeditor.js"></script> -->

  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>

  <!-- <script>
    // tag users 
    // Select input and tags container
    const inputField = document.querySelector('.tag-input');
    const tagsContainer = document.querySelector('.tags');

    // Function to create a tag
    function createTag(tagName) {
      // Create the tag element
      const tag = document.createElement('div');
      tag.classList.add('tag');
      tag.innerHTML = `${tagName} <span class="remove-tag">&times;</span>`;

      // Add a click event to the remove button
      tag.querySelector('.remove-tag').addEventListener('click', () => {
        tag.remove(); // Remove the tag
      });

      // Append the tag to the tags container
      tagsContainer.appendChild(tag);
    }

    // Handle input field keypress
    inputField.addEventListener('keypress', (e) => {
      if (e.key === 'Enter' && inputField.value.trim() !== '') {
        e.preventDefault(); // Prevent form submission
        createTag(inputField.value.trim()); // Add the tag
        inputField.value = ''; // Clear the input field
      }
    });

  </script>
  <script>

    var adminTableBody = [];
    var companyTableBody = [];
    var collegeTableBody = [];
    var candidateTableBody = '<%- JSON.stringify(candidates) %>'  ;

    var selectedTag = "candidate";
    var selectedTags = [];

    var searchby = "";
    // var searchbyadmin = "";
    var searchbycompany = "";
    var searchbycollege = "";
    var searchbycandidate = "";

    var candidates = '<%- JSON.stringify(candidates) %>';
    var page = '<%- page %>';
    adminPage = 0;
    companyPage = 0;
    collegePage = 0;
    candidatePage = page;
    var isSelectedFromtab = false;
  
    function loadData() {
      var tableBody = document.getElementById(selectedTag+"TableBody");
      tableBody.innerHTML = "";  // Clear the table before re-rendering.

      switch (selectedTag) {
        case "admin":
          candidates = adminTableBody;
          break;

        case "company":
          candidates = companyTableBody;
          break;

        case "college":
          candidates = collegeTableBody;
          break;

        case "candidate":
          candidates = candidateTableBody;
          break;
      }


        const selectedTagsMap = new Map(selectedTags.map((tag, index) => [tag._id, { isChecked: true, index, userType: tag.userType }]));
        candidates = candidates.map(candidate => {
            if (selectedTagsMap.has(candidate._id)) {
                return {
                    ...candidate,
                    ...selectedTagsMap.get(candidate._id)
                };
            }
            return candidate;
        });
        candidates.forEach((candidate, index) => {
          var isLastCandidate = index === candidates.length - 1;
          var row = `
            <tr>
              <td><input type="checkbox" ${candidate.isChecked ? "checked" : ""} onchange="handleOnSelectTag(event, ${index})"></td>
              <td class="employee-info">
                <img src="/public_assets/images/newpage/logo-ha.svg" alt="" class="employee-avatar" />
                <div class='employee-basic-info'>
                  <span class="employee-name tooltipp" title="${candidate.name}">
                    ${candidate.name}
                  </span>
                </div>
              </td>
              <td style='${((selectedTag === "college") || (selectedTag == "company") || (selectedTag == "admin")) ? "display: none;" : ""}'>${candidate.mobile}</td>
            </tr>
          `;
      
          tableBody.innerHTML += row;
        });
    }
  
    function loadMore() {
      if(selectedTag != "admin"){
        var newData = [];
        switch (selectedTag) {
          // case "admin":
          //   page = adminPage + 1;
          //   break;

          case "company":
            page = companyPage + 1;
            searchby = searchbycompany;
            break;

          case "college":
            page = collegePage + 1;
            searchby = searchbycollege;
            break;

          case "candidate":
            page = candidatePage + 1;
            searchby = searchbycandidate;
            break;
          
          default:
            searchby = "";
            break;
        }

          $.ajax({
            url: "/admin/post/getTagsList", // API endpoint
            type: "POST",
            data: {page: page, search: searchby, searchfor: selectedTag },
            success: function (response) {
              newData = response.candidates;
              if(candidates.length > 0){
                // candidates = [...candidates, ...newData];
                console.log("/admin/post/getTagsList  ==>  ", selectedTag)
                switch (selectedTag) {  
                  // case "admin":
                  //   adminTableBody = [...adminTableBody, ...newData];
                  //   break;

                  case "company":
                    companyTableBody = isSelectedFromtab ? newData : [...companyTableBody, ...newData];
                    break;

                  case "college":
                    collegeTableBody = isSelectedFromtab ? newData : [...collegeTableBody, ...newData];
                    break;

                  case "candidate":
                    candidateTableBody = isSelectedFromtab ? newData : [...candidateTableBody, ...newData];
                    break;
                } 
              } else {
                candidateTableBody = newData;
              }
              loadData();
            },
            error: function (xhr, status, error) {
              console.error("Error:", error);
            },
          });             
      } else {
        adminTableBody = [
          {
            _id: "5df0af9147ec65328e37425d",
            name: "Focalyt",
          }
        ]
        loadData();
      }
    }
  
    // Initial data load
    loadData();



    function handleOnSelectTag(e, i){
      candidates[i].isChecked = e.target.checked;

      if(e.target.checked){
        candidates[i].index = i;
        candidates[i].userType = selectedTag;
        selectedTags.push(candidates[i])
      } else {
        selectedTags = selectedTags.filter((el) => { return el.index !== i; });
      }
      setTabPills();
      hideOrShowDoneButton();
    }

    function setTabPills(){ //tagscandidate
      var tableBody = document.getElementById("tagscandidate");
        
        tableBody.innerHTML = "";  // Clear the table before re-rendering.
    
        selectedTags.forEach((tag, index) => {
          var showtags = `
            <div type="text" class="btn btn-primary" style="padding: 0.3rem 1rem;">
            ${tag.name} <span class="badge bg-secondary" onclick="handleRemoveSelectedTag(${index})"><i class="fa-solid fa-x" style="color: #000000;" aria-hidden="true"></i></span>
            </div>
          `;
    
          tableBody.innerHTML += showtags;
        });
    }

    function handleRemoveSelectedTag(i){
      candidates[selectedTags[i].index].isChecked = false;
      // delete selectedTags[i];
      selectedTags.splice(i, 1);
      setTabPills();
      loadData();
      hideOrShowDoneButton();
    }

    function searchbynameorphone(){
     switch (selectedTag) {
      case 'admin':
        searchbyadmin = "";
        break;

      case 'company':
        searchbycompany = document.getElementById("searchbyCompany").value;
        break;

      case 'college':
        searchbycollege = document.getElementById("searchbyInstitute").value;
        break;

      case 'candidate':
        searchbycandidate = document.getElementById("searchbyCanditate").value;
        break;

      default:
        searchby = '';
        break;
     }
     
     loadMore();
    }

    function scrollDetected() {
      document.querySelectorAll(".employee-attendance-table tbody").forEach((tbody) => {
          tbody.removeEventListener("scroll", handleScroll);
      });

      let tableBody = document.getElementById(selectedTag + "TableBody");
      if (tableBody) {
          tableBody.addEventListener("scroll", handleScroll);
      }
    }

    function scrollDetected() {
      document.querySelectorAll(".employee-attendance-table tbody").forEach((tbody) => {
          tbody.removeEventListener("scroll", handleScroll);
      });

      let tableBody = document.getElementById(selectedTag + "TableBody");
      if (tableBody) {
          tableBody.addEventListener("scroll", handleScroll);
      }
    }

    function handleScroll(event) {
        let tbody = event.target;
        if (tbody.scrollHeight - tbody.scrollTop <= tbody.clientHeight + 1) {
            isSelectedFromtab = false;
            loadMore();
        }
    }

    function selctedTagFor(selectedFor) {
        selectedTag = selectedFor;
        candidatePage = 0;
        collegePage = 0;
        companyPage = 0;
        isSelectedFromtab = true;

        setTimeout(() => {
            loadMore();
        }, 0);

        setTimeout(scrollDetected, 500);
    }

    document.addEventListener("DOMContentLoaded", function() {
        scrollDetected();
    });

    
    $(document).ready(function () {
      // Handle form submission
      $("#post-form").on("submit", function (e) {
        e.preventDefault(); // Prevent the default form submission

        console.log("Post Submiting")

        const formData = new FormData();
        formData.append("content", $("#post-content").val());
        const files = $("#file-upload")[0].files;
        console.log("Content:", $("#post-content").val());
        console.log("Files:", files);
        formData.append("data", JSON.stringify(selectedTags));
        for (let i = 0; i < files.length; i++) {
          formData.append("files", files[i]);
          console.log(`File ${i + 1}:`, files[i].name);
        }

        // Show a loading spinner or disable the submit button (optional)
        $("button[type=submit]").text("Posting...").attr("disabled", true);

        // Send data to the API
        $.ajax({
          url: "/api/postfiles", // API endpoint
          type: "POST",
          data: formData,
          processData: false,
          contentType: false,
          success: function (response) {
            // Handle successful response
            console.log("Response:", response);
            alert("Post created successfully!");
            // Optionally clear the form
            $("#post-form")[0].reset();
            $("button[type=submit]").text("Post").attr("disabled", false);
          },
          error: function (xhr, status, error) {
            // Handle error response
            console.error("Error:", error);
            alert("Failed to create post. Please try again.");
            $("button[type=submit]").text("Post").attr("disabled", false);
          },
        });
      });
    });

      function debounce(func, delay) {
            let timeout;
            return function(...args) {
                clearTimeout(timeout);
                timeout = setTimeout(() => func.apply(this, args), delay);
            };
        }

        function searchFunction() {
            searchbynameorphone();
            candidatePage = 0;
            collegePage = 0;
            companyPage = 0;
            candidateTableBody = [];
            collegeTableBody = [];
            companyTableBody = [];
        }

        const debouncedSearch = debounce(searchFunction, 500);

        function hideOrShowDoneButton(){
          const message = document.getElementById("donebutton");
          if (selectedTags.length === 0) {
              message.style.display = "none"; 
          } else {
              message.style.display = "block"; 
          }
        }
        hideOrShowDoneButton();

        function closePopup(){
          selectedTags = [];
          hideOrShowDoneButton();
          candidates.forEach(item => {
            if ("isChecked" in item) {
                item.isChecked = false;
            }
          });
          setTabPills();
          loadData();
        }
        
  </script> -->


  <% include ../partials/footer %>
    </div>

<link rel="stylesheet" href="/css/newpages/blog.css">


<% include ../partials/header %>
  <div class="content-header row d-xl-block d-lg-block d-md-none d-sm-none d-none">
    <div class="content-header-left col-md-9 col-12 mb-2">
      <div class="row breadcrumbs-top">
        <div class="col-12">
          <h3 class="content-header-title float-left mb-0">All Post</h3>
          <div class="breadcrumb-wrapper col-12">
            <ol class="breadcrumb">
              <li class="breadcrumb-item"><a href="/admin">Home</a></li>
              <li class="breadcrumb-item active">All Post</li>
            </ol>
          </div>
        </div>
      </div>
    </div>
  </div>
  <div id="add-model">
    <div class="content-body">
      <% include ../partials/flash %>
      <div class="">
        <% if (posts && posts.length> 0) { %>
          <% posts.forEach((post)=> { %>
            <div class="blog--card">
              <!-- Header Section -->
              <div class="card-header">
                <div class="inner__card">
                  <div class="user-info">
                    <div class="user_image text-black">
                      <figure>
                        <img src="public_assets/images/newpage/favicon.png" alt>
                      </figure>
                    </div>
                    <h3 class="user__name text-black">
                      <span class="start__name"><b>Focalyt</b></span>
                      
                      <% if (post.tags && post.tags.length > 0) { %>
                        <span class="tag__user">
                          is with <b><%= post.tags[0].name %></b>
                        </span>
                    
                        <% if (post.tags.length > 1) { %>
                          <span class="more__user strong"> & <b><%= post.tags.length - 1 %></b></span>
                          <span class="other"><b> Others</b></span>
                        <% } %>
                      <% } %>
                    </h3>
                  </div>
                  <div class="dropdown-wrapper">
                    <div class="dropdown-container">
                      <div class="dropdown-trigger">
                        <i class="fas fa-ellipsis-v" style="color: black; cursor: pointer;"></i>
                      </div>
                      <div class="dropdown-post">
                        <div class="dropdown-item">
                          <i class="fas fa-edit"></i>
                          <span>Edit</span>
                        </div>
                        <div class="dropdown-item">
                          <i class="fas fa-trash"></i>
                          <span>Delete</span>
                        </div>
                      </div>
                    </div>
                  </div>
                </div>

                <!-- <h5 class="blog__title text-black">Secure Your Future with Cybersecurity! <span>more...</span></h5> -->
                <h5 class="blog__title text-black">
                  <span class="hidden-text">
                    <%= post.content || "No content available" %>
                  </span>
                  <span class="toggle-more see-more-hidden">See more...</span> <!-- Changed ID to class -->
                </h5>


              </div>

              <!-- Main Content -->
              <div class="card-content" id="post-<%= post._id || index %>">
                <div class="card-image">
                  <div class="happy_candidates" id="blog--images">
                    <div class="happy_candidate_images">
                      <% if (post.files && post.files.length> 0) { %>
                        <% post.files.forEach((file)=> { %>
                          <% if (file.fileType==="image" ) { %>
                            <div>
                              <img src="<%= file.fileURL %>" class="d-block w-100" alt="image">
                            </div>
                            <% } else if (file.fileType==="video" ) { %>
                              <div>
                                <video class="d-block w-100 video_height lazy-video" muted controls autoplay
                                  playsinline>
                                  <source src="<%= file.fileURL %>" type="video/mp4">
                                  Your browser does not support the video tag.
                                </video>
                              </div>
                              <% } %>
                                <% }); %>
                                  <% } %>



                    </div>
                  </div>
                </div>
                
              </div>

            </div>
            <% }); %>
              <% } else { %>
                <p>No posts available.</p>
                <% } %>

        
      </div>


    </div>
    <script>
      document.addEventListener("DOMContentLoaded", function () {
        const blogCards = document.querySelectorAll(".blog--card"); // Sabhi blog cards ko target karein
        blogCards.forEach((card) => {
          const hiddenText = card.querySelector(".hidden-text"); // Card ke text ko target karein
          const toggleMore = card.querySelector(".toggle-more"); // Card ke toggle button ko target karein
  
          if (hiddenText && toggleMore) {
            // Function to check if text is truncated
            function isTextTruncated(element) {
              const computedStyle = window.getComputedStyle(element);
              const lineHeight = parseFloat(computedStyle.lineHeight); // Line height calculate karein
              const maxLines = 4; // Max 4 lines ki limit
              const actualLines = Math.ceil(element.scrollHeight / lineHeight); // Total lines calculate karein
  
              return actualLines > maxLines; // True agar 4 lines se zyada hai
            }
  
            // Function to handle toggle-more visibility
            function handleToggleVisibility() {
              if (isTextTruncated(hiddenText)) {
                toggleMore.classList.remove("see-more-hidden"); // Button visible karein
                toggleMore.classList.add("see-more-visible"); // Visible class add karein
              } else {
                toggleMore.classList.remove("see-more-visible"); // Button hidden karein
                toggleMore.classList.add("see-more-hidden"); // Hidden class add karein
              }
            }
  
            // Initial visibility check
            handleToggleVisibility();
  
  
  
            // Toggle visibility on button click
            toggleMore.addEventListener("click", function () {
              if (hiddenText.classList.contains("hidden-text")) {
                hiddenText.classList.remove("hidden-text");
                hiddenText.classList.add("show-text"); // Text pura dikhane ke liye class change karein
                toggleMore.textContent = "See less..."; // Button text update karein
              } else {
                hiddenText.classList.remove("show-text");
                hiddenText.classList.add("hidden-text"); // Text phir se chhupane ke liye class change karein
                toggleMore.textContent = "See more..."; // Button text update karein
              }
            });
  
            // COMMENT FUNCTIONALITY
            const commentButton = card.querySelector(".comment");
            const commentBox = card.querySelector(".comment_box");
  
            if (commentButton && commentBox) {
              commentButton.addEventListener("click", () => {
                commentBox.classList.toggle("visible");
              });
            }
  
          }
        });
      });
  
  
      document.addEventListener("DOMContentLoaded", function () {
        const videos = document.querySelectorAll(".lazy-video"); // Select all videos with class 'lazy-video'
  
        // Ensure all videos are paused initially
        videos.forEach((video) => {
          video.pause(); // Start with paused state
        });
  
        // Create Intersection Observer
        const observer = new IntersectionObserver(
          (entries) => {
            entries.forEach((entry) => {
              const video = entry.target;
  
  
              if (entry.isIntersecting) {
  
                // Define an async function to handle the play and unmute logic
                const playVideo = async (video) => {
                  try {
                    // Start playing the video in muted mode
  
                    await video.play(); // Wait for the video to start playing
  
                  } catch (error) {
                    console.error("Error while trying to play the video:", error); // Handle autoplay errors
                  }
                };
  
                // Call the async function
                playVideo(video);
              } else {
                // Pause the video when it exits the viewport
                video.pause();
              }
            });
          },
          { threshold: 0.5 } // At least 50% of the video should be visible
        );
  
        // Observe each video
        videos.forEach((video) => {
          observer.observe(video);
        });
      });
  
  
    </script>
  <script>
    document.addEventListener("DOMContentLoaded", function () {
    const shareLinks = document.querySelectorAll(".share_link");
  
    shareLinks.forEach((shareLink) => {
      shareLink.addEventListener("click", function () {
        const postUrl = window.location.href; // Get the current page URL
        const shareData = {
          title: "Check this out!",
          text: "This is an awesome post. Check it out!",
          url: postUrl,
        };
  
        // Check if Web Share API is supported
        if (navigator.share) {
          navigator
            .share(shareData)
            .then(() => console.log("Shared successfully!"))
            .catch((error) => console.error("Error sharing:", error));
        } else {
          // Fallback for unsupported browsers: Copy link to clipboard
          const tempInput = document.createElement("input");
          document.body.appendChild(tempInput);
          tempInput.value = postUrl;
          tempInput.select();
          document.execCommand("copy");
          document.body.removeChild(tempInput);
          alert("Link copied to clipboard! Share it manually.");
        }
      });
    });
  });
  
  </script>
   
  

  
<script>
  document.addEventListener('DOMContentLoaded', function() {
  // Select all dropdown containers in .newdropdown
  const dropdownContainers = document.querySelectorAll('.newdropdown .dropdown-container');
  
  dropdownContainers.forEach(container => {
    const dropdownTrigger = container.querySelector('.dropdown-trigger');

    // Toggle dropdown
    dropdownTrigger.addEventListener('click', function(e) {
      e.stopPropagation();
      
      // Close other open dropdowns
      dropdownContainers.forEach(otherContainer => {
        if (otherContainer !== container) {
          otherContainer.classList.remove('active');
        }
      });
      
      // Toggle current dropdown
      container.classList.toggle('active');
    });

    // Optional: Add click handlers for dropdown items
    const dropdownItems = container.querySelectorAll('.dropdown-item');
    dropdownItems.forEach(item => {
      item.addEventListener('click', function() {
        const action = item.querySelector('span').textContent.toLowerCase();
        
        switch(action) {
          case 'edit':
            console.log('Edit clicked');
            break;
          case 'delete':
            console.log('Delete clicked');
            break;
        }
        
        // Close dropdown after action
        container.classList.remove('active');
      });
    });
  });

  // Close dropdowns when clicking outside
  document.addEventListener('click', function() {
    dropdownContainers.forEach(container => {
      container.classList.remove('active');
    });
  });

  // Prevent dropdown from closing when clicking inside
  dropdownContainers.forEach(container => {
    container.addEventListener('click', function(e) {
      e.stopPropagation();
    });
  });
});
</script>
    </div>


<% include ../partials/footer %>
